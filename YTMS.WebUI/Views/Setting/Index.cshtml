
@{
    ViewBag.Title = "首页";

    var menuList = new List<LeftMenuViewModel>()
    {
        new LeftMenuViewModel(){ MenuId=1, Text="全局信息设置", Href= WebPath.Url("~/Setting/Index"), ClassStyle="el-icon-menu", IsSelected=true },
        new LeftMenuViewModel(){ MenuId=2, Text="房型项目管理", Href= WebPath.Url("~/Setting/Index"), ClassStyle="el-icon-menu" },
        new LeftMenuViewModel(){ MenuId=3, Text="用户管理", Href= WebPath.Url("~/Setting/Index"), ClassStyle="el-icon-menu" },
        new LeftMenuViewModel(){ MenuId=4, Text="业主管理", Href= WebPath.Url("~/Setting/Index"), ClassStyle="el-icon-menu" },
        new LeftMenuViewModel(){ MenuId=5, Text="客房管理", Href= WebPath.Url("~/Setting/Index"), ClassStyle="el-icon-menu" },
        new LeftMenuViewModel(){ MenuId=6, Text="标签管理", Href= WebPath.Url("~/Setting/Index"), ClassStyle="el-icon-menu" }
    };
}
@section Style{

    @Html.RefCss("css/header.css")
    @Html.RefCss("css/setting.css")
}
@section Body{
    <div id="app">
        @{Html.RenderPartial("Header"); }
        <div class="section">
            @{Html.RenderPartial("TopTab", 1); }
            <div class="container">
                <div class="aside">
                    @{Html.RenderPartial("LeftMenu", menuList); }

                </div>
                <div class="panel ">
                    <div class="outer">
                        <div class="form">
                            <div class="s">
                                <span class="tab">分成比例：</span>
                                <el-input size="mini" class="long" v-model="configData.Proportion"></el-input>
                                <b class="co_red">*</b>
                                <span class="tip">设置平台与业主分成比例，如4表示业主4成</span>
                            </div>
                            <div class="s">
                                <span class="tab">固定损耗：</span>
                                <el-input size="mini" class="long" v-model="configData.FixedLoss"></el-input>
                                <b class="co_red">*</b>
                                <span class="tip">设置客房固定损耗金额</span>
                            </div>
                            <div class="s">
                                <span class="tab">平台扣点：</span>
                                <el-input size="mini" class="medium" v-model="configData.PlatformPoint"></el-input>%
                                <b class="co_red">*</b>
                                <span class="tip">设置设置第三方平台扣款比例</span>
                            </div>
                            <div class="s">
                                <span class="tab">客房海报数量：</span>
                                <el-input size="mini" class="long" v-model="configData.RoomCoverMaxNum"></el-input>
                                <b class="co_red">*</b>
                                <span class="tip">设置房间能上传海报图片最大数量</span>
                            </div>
                            <div class="s">
                                <span class="tab">业主保底分成：</span>
                                <el-input size="mini" class="long" v-model="configData.FloorEarnings"></el-input>
                                <b class="co_red">*</b>
                            </div>
                            <div class="btn">
                                <el-button size="medium" type="warning">保存</el-button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
}
@section Script{
    <script>
         var vm= new Vue({
            el: '#app',
            data: {
                configData: {
                    Proportion: null,
                    FixedLoss: 0.00,
                    PlatformPoint: 0,
                    FloorEarnings: 0.00,
                    RoomCoverMaxNum: 2
                }
            },
            computed: {},
            methods: {
                get: function () {
                    $.get(buildUrl('~/Setting/GetSysConfig'), {}, function (res) {
                       
                        if (res.error) {
                            Msg.alert(res.error.message);
                            return;
                        }
                        
                        if (res.value) {
                            vm.configData = res.value;
                           
                            Msg.prompt('保存成功');
                        }
                    });
                }
            },
            created: function () {
                this.get();
            }
        })
    </script>
}
